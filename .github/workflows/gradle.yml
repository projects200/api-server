# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI/CD to AWS

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "main" ]

jobs:
  backend-CI: 
    name: Build and Upload to S3
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
  # - name: Application YML 생성 // 일단 현재는 환경변수 필요없어서 주석처리
  #    run: |
  #      mkdir -p backend/src/main/resources
  #      echo "${{ secrets.APPLICATION_PROD_YML }}" | base64 --decode > backend/src/main/resources/application-prod.yml
  #      echo "${{ secrets.APPLICATION_DEV_YML }}" | base64 --decode > backend/src/main/resources/application-dev.yml
  #      echo "${{ secrets.APPLICATION_AUTH_YML }}" | base64 --decode > backend/src/main/resources/application-auth.yml
  #      echo "${{ secrets.APPLICATION_MAIL_YML }}" | base64 --decode > backend/src/main/resources/application-mail.yml
        
    - name: Gradle build
      run: |
        cd api-server
        mkdir -p build/generated-snippets/
        chmod +x gradlew
        ./gradlew build
      shell: bash

    - name: Configure AWS credentials
      if: ${{ github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main' }}
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Dev S3에 업로드
      if: ${{ github.ref == 'refs/heads/dev' }}
      run: |
        mkdir -p before-deploy
        cp backend/build/libs/cabinet-*.jar before-deploy/
        cd before-deploy && zip -r before-deploy "*"
        cd ../ && mkdir -p deploy
        mv before-deploy/before-deploy.zip deploy/deploy.zip
        aws s3 cp deploy/deploy.zip s3://${{ secrets.AWS_S3_DEV_BUCKET_NAME }}/deploy.zip

      
